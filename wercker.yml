box: ubuntu
build:
  steps:
    - script:
        name: echo
        code: |
          echo "This is wercker box for terraform!!"
          pwd
          ls -la
    # - script:
    #     name: change dash to bash
    #     code: |
    #       ls -l /bin/sh
    #       sudo rm /bin/sh
    #       sudo ln -s /bin/bash /bin/sh
    #       ls -l /bin/sh
    - script:
        name: install some tools
        code: |
          sudo apt-get update
          sudo apt-get -f install
          sudo apt-get install -y wget unzip curl git
    - script:
        name: install direnv
        code: |
          sudo curl -L -o direnv https://github.com/zimbatm/direnv/releases/download/v2.6.0/direnv.linux-amd64
          sudo install direnv /usr/local/bin
          echo 'type direnv > /dev/null 2>&1 && eval "$(direnv hook bash)" ' >> $HOME/.bashrc
          exec $SHELL
          which direnv
          direnv -v
    - script:
        name: exec terraform plan
        code: |
          pwd
          ls -la
          ls -l /bin/sh
          which git
          bash ./terraform/check_env.sh > 1
    - script:
        name: exec terrap
        code: |
          # 引数で渡されたディレクトリのファイルが変更されたか？
          is_file_changed() {
            local environment=$1
            # 実行ステータスだけ取得したいので、grepの結果は出力しない
            git diff --name-only HEAD HEAD^ \
              | grep $environment/ >> /dev/null
            echo $?
          }

          # ファイルが変更されたディレクトリの配列を取得
          get_file_change_environment_list() {
            local environment
            for environment in ${ALL_ENVIRONMENT[@]}
            do
              if [ `is_file_changed $environment` == "0" ]; then
                # echo $environment
                FILE_CHANGE_ENVIRONMENT+=($environment)
              fi
            done
            echo ${FILE_CHANGE_ENVIRONMENT[@]}
          }

          # terraform planを与えられた環境で行う
          exec_terraform_plan_per_environment() {
            local environment_list=$@
            for environment in ${environment_list[@]}
            do
              cd $TERRAFORM_DIR/$environment
              echo `pwd`

              cd -
            done
          }

          main() {
            readonly ALL_ENVIRONMENT=("evaluation" "staging" "production")
            readonly EVALUATION="evaluation"
            readonly STAGING="staging"
            readonly PRODUCTION="production"
            readonly TERRAFORM_DIR="terraform/aws/"

            FILE_CHANGE_ENVIRONMENT=()

            # ファイルが変更された環境を取得
            file_change_environment=`get_file_change_environment_list`
            echo ${file_change_environment[@]}

            # ファイルが変更された環境でterraform planを実行
            exec_terraform_plan_per_environment ${file_change_environment[@]}
          }

          main
