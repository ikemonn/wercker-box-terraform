box: ubuntu
build:
  steps:
    - script:
        name: echo
        code: |
          echo "shell: " $SHELL
          chsh -s /bin/bash
          echo "shell: " $SHELL

    # - script:
    #     name: install some tools
    #     code: |
    #       sudo apt-get update
    #       sudo apt-get -f install
    #       sudo apt-get install -y wget unzip curl git
    - script:
        name: env var test
        code: |
          environment="evaluation"
          cd terraform/aws/$environment
          export TF_VAR_hoge=${$environment_AWS_ACCESS_KEY}
          echo "============="
          echo $TF_VAR_hoge
          echo "============="

          cd -
          environment="staging"
          cd terraform/aws/$environment
          export TF_VAR_hoge=${$environment_AWS_ACCESS_KEY}
          echo "============="
          echo $TF_VAR_hoge
          echo "============="
    # - script:
    #     name: install direnv
    #     code: |
    #       curl -sSL -o /tmp/direnv https://github.com/zimbatm/direnv/releases/download/v2.6.0/direnv.linux-amd64 \
    #        && shasum /tmp/direnv | grep -q 'ccc0b6569c39951d22ce7379b15fdffddb62d82d' \
    #        && install /tmp/direnv /bin/direnv \
    #        && rm /tmp/direnv
    #       cat ~/.bashrc
    #       echo 'eval "$(direnv hook bash)"' >> ~/.bashrc
    #       cat ~/.bashrc
    #       source ~/.bashrc
    #       direnv
    # - script:
    #     name: use direnv
    #     code: |
    #       direnv hook bash
    #       echo 'export HOGE="hoge env value"' >> terraform/aws/evaluation/.envrc
    #       cat terraform/aws/evaluation/.envrc
    #       cd terraform/aws/evaluation/
    #       pwd
    #       echo "================ 0 =================="
    #       direnv allow
    #       echo "================ 1 =================="
    #       echo $HOGE
    #       echo "================ 2 =================="
    #       export -p
    - script:
        name: exec terraform plan
        code: |
          pwd
          ls -la
          ls -l /bin/sh
          which git
          bash ./terraform/check_env.sh > 1
    - script:
        name: exec terrap
        code: |
          # 引数で渡されたディレクトリのファイルが変更されたか？
          is_file_changed() {
            local environment=$1
            # 実行ステータスだけ取得したいので、grepの結果は出力しない
            git diff --name-only HEAD HEAD^ \
              | grep $environment/ >> /dev/null
            echo $?
          }

          # ファイルが変更されたディレクトリの配列を取得
          get_file_change_environment_list() {
            local environment
            for environment in ${ALL_ENVIRONMENT[@]}
            do
              if [ `is_file_changed $environment` == "0" ]; then
                # echo $environment
                FILE_CHANGE_ENVIRONMENT+=($environment)
              fi
            done
            echo ${FILE_CHANGE_ENVIRONMENT[@]}
          }

          # terraform planを与えられた環境で行う
          exec_terraform_plan_per_environment() {
            local environment_list=$@
            for environment in ${environment_list[@]}
            do
              cd $TERRAFORM_DIR/$environment
              export TF_VAR_hoge=${$environment_AWS_ACCESS_KEY}
              echo "============="
              echo $TF_VAR_hoge
              echo "============="
              echo `pwd`

              cd -
            done
          }

          main() {
            readonly ALL_ENVIRONMENT=("evaluation" "staging" "production")
            readonly EVALUATION="evaluation"
            readonly STAGING="staging"
            readonly PRODUCTION="production"
            readonly TERRAFORM_DIR="terraform/aws/"

            FILE_CHANGE_ENVIRONMENT=()

            # ファイルが変更された環境を取得
            file_change_environment=`get_file_change_environment_list`
            echo ${file_change_environment[@]}

            # ファイルが変更された環境でterraform planを実行
            exec_terraform_plan_per_environment ${file_change_environment[@]}
          }

          main
